define([],function(){"use strict";return{parseQueryString:function(t){var n={},r,i,s,o;r=t.split("&");for(s=0,o=r.length;s<o;s++)i=r[s].split("="),n[i[0]]=i[1];return n},isSubPage:function(t){var n=window.location.search,r=!1,i;if(n){n=n.slice(1),i=this.parseQueryString(n);for(var s in i)if(s==="view"&&i[s]===t){r=!0;break}}return r},padEnd:function(t,n,r){return n>>=0,r=String(typeof r!="undefined"?r:""),t.length>n?t:(n-=t.length,n>r.length&&(r+=r.repeat(n/r.length)),String(t)+r.slice(0,n))},strToArrayBuffer:function(t){var n=new ArrayBuffer(t.length*2),r=new Uint16Array(n);for(var i=0,s=t.length;i<s;i++)r[i]=t.charCodeAt(i);return n},arrayBufferToBase64:function(t){return btoa(String.fromCharCode.apply(null,new Uint8Array(t)))},encryptField:function(t,n){var r=this,i=window.crypto.getRandomValues(new Uint8Array(16)),s=new TextEncoder,o={name:"AES-CBC",iv:i,tagLength:128};return t=r.padEnd(t.slice(0,16),16,"*"),window.crypto.subtle.importKey("raw",s.encode(t),"AES-CBC",!0,["encrypt","decrypt"]).then(function(e){return window.crypto.subtle.encrypt(o,e,r.strToArrayBuffer(n))}).then(function(e){var t=r.arrayBufferToBase64(e),n=r.arrayBufferToBase64(i);return t+":"+n})}}});